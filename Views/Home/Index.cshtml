<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>GoodVibes</title>
    <link rel="stylesheet" type="text/css" href="../css/demos.css" />
    <link rel="stylesheet" type="text/css" href="~/css/w3animation.css" />
    <link rel="stylesheet" type="text/css" href="~/css/bootstrap.min.css" />
    <link rel="stylesheet" type="text/css" href="~/css/bootstrap-theme.min.css" />


    <link href='http://fonts.googleapis.com/css?family=Open+Sans:300,600,400' rel='stylesheet' type='text/css'>

    <link type="text/css" rel="stylesheet" href="../css/jsgrid-theme.min.css" />
    <link rel="stylesheet" type="text/css" href="../css/jsgrid.min.css" />

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>
    <script src="../scripts/bootstrap.min.js"></script>

    <script src="../scripts/db.js"></script>
    <script src="../scripts/jsgrid.core.js"></script>
    <script src="../scripts/jsgrid.load-indicator.js"></script>
    <script src="../scripts/jsgrid.load-strategies.js"></script>
    <script src="../scripts/jsgrid.sort-strategies.js"></script>
    <script src="../scripts/jsgrid.field.js"></script>
    <script src="../scripts/jsgrid.field.text.js"></script>
    <script src="../scripts/jsgrid.field.number.js"></script>
    <script src="../scripts/jsgrid.field.select.js"></script>
    <script src="../scripts/jsgrid.field.checkbox.js"></script>
    <script src="../scripts/jsgrid.field.control.js"></script>
</head>

<body class="w3-container w3-center w3-animate-opacity">

    <div class="navbar navbar-default" style="margin-top:0.15%; margin-right:15%; margin-left:18.5%;">

        <ul class="nav navbar-nav">
            <li><a style="float:left;" data-toggle="modal" role="button" data-target="#myModal">Add song</a></li>
            <li><a style="float:left;" onclick="deleterow()" role="button">Delete song</a></li>
            <li><a style="float:left;" role="button" onclick="hideplayer()">Show/Hide Video</a></li>
            <li><a style="float:left;" role="button" onclick="gofullscreen()">Fullscreen</a></li>
            <li><a style="float:left;" role="button">Help</a></li>
        </ul>
    </div>
    
    <div class="navbar navbar-default navbar-fixed-left" style="float:left; max-height:70%; margin-left:10%; margin-top:0.05%; max-width:15%;">
        <ul class="nav navbar-nav">
            <li><a class="navbar-brand">Playlists</a></li> 
            <li><a style="float:left;" onclick="onclick123()" role="button">Starred</a></li>
            <li><a style="float:left;" role="button">Metal</a></li>
            <li><a style="float:left;" role="button">Hiphop</a></li>
            <li><a style="float:left;" role="button">Bilelista</a></li>
            <li><a style="float:left;" role="button">Punttimusat</a></li>
        </ul>
    </div>

    <div id="jsGrid" style="margin-top:0.05%; margin-left:1%; max-width:33%; float:left;"></div>
    <div id="player" style="margin-right:15%; margin-top:0.05%; max-width:33%; float:right;"></div>
        


    <div class="navbar navbar-default navbar-fixed-bottom">
        
        <div class="container">
            <div id="nowplaying" style="margin-right:15%; margin-left:15%;  margin-top:1.5%; max-width:70%;">
                Now playing:
                <span style="font-weight: bold;"></span>
            </div>
            <div id="progressBar" style="margin-right:15%; margin-left:15%; margin-bottom:1.0%;  margin-top:1.0%; max-width:70%;">
                <div></div>
            </div>
            <div style="margin-right:15%; margin-left:15%; margin-bottom:1.0%;  margin-top:1.0%; max-width:70%;">
                <button type="button" onclick="playprevioussong()" class="btn btn-primary btn-sm"><span class="glyphicon glyphicon-fast-backward"></span></button>
                <button type="button" onclick="player.pauseVideo()" class="btn btn-primary btn-sm"><span class="glyphicon glyphicon-stop"></span></button>
                <button type="button" onclick="player.playVideo()"  class="btn btn-primary btn-sm"><span class="glyphicon glyphicon-play"></span></button>
                <button type="button" onclick="playnextsong()" class="btn btn-primary btn-sm"><span class="glyphicon glyphicon-fast-forward"></span></button>

            </div>
            <p>
                GoodVibes 2016 - Jarkko Skyttälä
            </p>
        </div>
    </div>

    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Add a song</h4>
                </div>
                <div class="modal-body">
                    <form class="addsongform" name="addsongform" id="addsongform" method="post" role="form">
                        <div class="form-group">
                            <input type="text" name="song_url" class="form-control" id="song_url" placeholder="Enter youtube videoid (youtube.com/watch?v=tPEE9ZwTmy0 the part after ?v=)">
                        </div>
                        <div class="form-group">
                            <input type="text" name="song_artist"  class="form-control" id="song_artist" placeholder="Enter song artist">
                        </div>
                        <div class="form-group">
                            <input type="text" name="song_name"  class="form-control" id="song_name" placeholder="Enter song name">
                        </div>
                        <button type="submit" id="addsongform" class="btn btn-default">Add song</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    


    <script>

        function gofullscreen() {
            var $ = document.querySelector.bind(document);
            var playerElement = $('#player');
            var requestFullScreen = playerElement.requestFullScreen || playerElement.mozRequestFullScreen || playerElement.webkitRequestFullScreen;
            if (requestFullScreen) {
                requestFullScreen.bind(playerElement)();
            }
        }
        $(function () {
            $('#addsongform').on('submit', function (e) {
                e.preventDefault();
                $.ajax({
                    url: "../api/insertsong/",
                    type: "POST",
                    data: $("#addsongform").serialize(),
                    dataType: "text",
                    success: function(data)
                    {
                        $("#jsGrid").jsGrid("loadData");
                        $('#myModal').modal('hide');
                    },
                    error: function(data)
                    {
                    }
                    });
                });
        });

        function playprevioussong()
        {
            var row = $(".selected-row:first");
            $("#jsGrid tr").removeClass("selected-row")
            row[0].previousSibling.className += ' selected-row';
            player.loadVideoById(row[0].previousSibling.firstChild.innerText, 0, 'large');
        }

        function playnextsong()
        {
            var row = $(".selected-row:first");
            $("#jsGrid tr").removeClass("selected-row")
            row[0].nextSibling.className += ' selected-row';
            player.loadVideoById(row[0].nextSibling.firstChild.innerText, 0, 'large');
        }

        function hideplayer()
        {
            if ($("#player").hasClass("hide")) {
                $("#player").removeClass("hide");
            }
            else {
                $("#player").addClass("hide");
            }
        }

        function deleterow() {
            var row = $(".selected-row:first");

            $.ajax({
                url: "../api/deletesong/JSK/" + row[0].firstChild.innerText,
                type: "DELETE",
                dataType: "text",
                success: function(data)
                {
                    $("#jsGrid").jsGrid("loadData");
                },
                error: function(data)
                {
                    alert("Song delete failed");
                }
            });
        }

        
        
        $(function () {
            $("#jsGrid").jsGrid({
                height: "70%",
                width: "75%",
                sorting: true,
                paging: false,

                autoload: true,
                rowClick: function (args) {
                    var $row = this.rowByItem(args.item);
                    $("#jsGrid tr").removeClass("selected-row")
                    $row.addClass("selected-row");
                },
                rowDoubleClick: function (args) {
                    var $row = this.rowByItem(args.item);
                    var val = $row["song_url"];
                    $("#jsGrid tr").removeClass("selected-row")
                    $row.addClass("selected-row");
                    player.loadVideoById(args.item.song_url, 0, 'large');
                },

                controller: {
                    loadData: function () {
                        return $.ajax({
                            type: "GET",
                            url: "../api/getplaylist/JSK",
                            dataType: "json",
                        })
                    }
                },

                fields: [
                    { title: "song_url", css: "hide", name: "song_url", type: "text", align: "left", width: 50 },
                    { title: "Artist", name: "song_artist", align: "left", type: "text", width: 200 },
                    { title: "Song name", name: "song_name", align: "left", type: "text", width: 200 },
                    { title: "Date Added", name: "date_created", align: "left", type: "date", width: 150 }
                ]
            });
        });

        function progress(percent, $element) {
            var progressBarWidth = percent * $element.width() / 100;
            $element.find('div').animate({ width: progressBarWidth });
        }

        // 2. This code loads the IFrame Player API code asynchronously.
        var tag = document.createElement('script');

        tag.src = "https://www.youtube.com/iframe_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

        // 3. This function creates an <iframe> (and YouTube player)
        //    after the API code downloads.
        var player;
        function onYouTubeIframeAPIReady() {
            player = new YT.Player('player', {
                height: '70%',
                width: '75%',

                events: {
                    'onReady': onPlayerReady,
                    'onStateChange': onPlayerStateChange
                },
                playerVars: {
                    'modestbranding': 1,
                    'autoplay': 0,
                    'controls': 0,
                    'rel': 0,
                    'showinfo': 0
                }
            });
        }

        // 4. The API will call this function when the video player is ready.
        function onPlayerReady(event) {
            var row = $(".jsgrid-row:first");
            console.log(row);
            row[0].className += ' selected-row';

            player.loadVideoById(row[0].firstChild.innerText, 0, 'large');
        }

        function onPlayerStateChange(event) {
            if (event.data == YT.PlayerState.ENDED) {
                var row = $(".selected-row:first");
                $("#jsGrid tr").removeClass("selected-row")
                row[0].nextSibling.className += ' selected-row';

                player.loadVideoById(row[0].nextSibling.firstChild.innerText, 0, 'large');
            }
            if (event.data == YT.PlayerState.PLAYING) {
                var row = $(".selected-row:first");
                $('#nowplaying span').text(row[0].childNodes[1].innerText + " - " + row[0].childNodes[2].innerText);
                $('#progressBar').show();

                var playerTotalTime = player.getDuration();
                mytimer = setInterval(function () {
                    var playerCurrentTime = player.getCurrentTime();

                    var playerTimeDifference = (playerCurrentTime / playerTotalTime) * 100;

                    progress(playerTimeDifference, $('#progressBar'));
                }, 1000);

            } else {
                clearTimeout(mytimer);
            }
        }
        function stopVideo() {
            player.stopVideo();
        }
            
    

    </script>
</body>
</html>
